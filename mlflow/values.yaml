replicaCount: 1

image:
  repository: ghcr.io/mlflow/mlflow
  pullPolicy: Always
  tag: "v2.13.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:  
    eks.amazonaws.com/role-arn: "arn:aws:iam::557680788250:role/mlflow-role"
  name: ""

podAnnotations: {}
podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 5000
  name: http
  annotations: {}

backendStore:
  databaseMigration: false
  databaseConnectionCheck: false

  postgres:
    enabled: true
    # -- Postgres host address. e.g. your RDS or Azure Postgres Service endpoint
    host: "postgresql.dan-test.svc.cluster.local" # required
    port: 5432 
    # -- mlflow database name created before in the postgres instance
    database: "cloudmlflow" # required
    # -- postgres database user name which can access to mlflow database
    user: "postgres" # required
    # -- postgres database user password which can access to mlflow database
    password: "foCvGputD4" # required
    # -- postgres database connection driver. e.g.: "psycopg2"
    driver: ""

artifactRoot:
  proxiedArtifactStorage: false
  s3:
    # -- Specifies if you want to use AWS S3 Mlflow Artifact Root
    enabled: true
    # -- S3 bucket name
    bucket: "arn:aws:s3:::mlflow-tikal" # required
    # -- S3 bucket folder. If you want to use root level, please don't set anything.
    path: "" # optional
    # -- AWS IAM user AWS_ACCESS_KEY_ID which has attached policy for access to the S3 bucket
    awsAccessKeyId: "" # (awsAccessKeyId and awsSecretAccessKey) or roleArn serviceaccount annotation required
    # -- AWS IAM user AWS_SECRET_ACCESS_KEY which has attached policy for access to the S3 bucket
    awsSecretAccessKey: "" # (awsAccessKeyId and awsSecretAccessKey) or roleArn serviceaccount annotation required

extraArgs: {}
extraFlags: []
extraEnvVars: {}
  # MLFLOW_S3_IGNORE_TLS: true
  # MLFLOW_S3_UPLOAD_EXTRA_ARGS: '{"ServerSideEncryption": "aws:kms", "SSEKMSKeyId": "1234"}'
  # AWS_DEFAULT_REGION: my_region
  # MLFLOW_S3_ENDPOINT_URL: http://1.2.3.4:9000
  # AWS_CA_BUNDLE: /some/ca/bundle.pem
  # MLFLOW_GCS_DEFAULT_TIMEOUT - Sets the standard timeout for transfer operations in seconds (Default: 60). Use -1 for indefinite timeout.
  # MLFLOW_GCS_UPLOAD_CHUNK_SIZE - Sets the standard upload chunk size for bigger files in bytes (Default: 104857600 ≙ 100MiB), must be multiple of 256 KB.
  # MLFLOW_GCS_DOWNLOAD_CHUNK_SIZE - Sets the standard download chunk size for bigger files in bytes (Default: 104857600 ≙ 100MiB), must be multiple of 256 K

# -- Extra secrets for environment variables
extraSecretNamesForEnvFrom: []
# - my-mlflow-secrets

ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    external-dns.alpha.kubernetes.io/hostname: mlflow.infra.tikalk.dev
    
  hosts:
    - host: mlflow.infra.tikalk.dev
      paths:
        - path: /
          pathType: ImplementationSpecific

resources: 
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

serviceMonitor:
  enabled: false
  useServicePort: false
  # -- Set the namespace the ServiceMonitor should be deployed
  namespace: prometheus
  # -- Set how frequently Prometheus should scrape
  interval: 30s
  # -- Set path to mlflow telemtery-path
  telemetryPath: /metrics
  # -- Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  labels:
    # -- default `kube prometheus stack` helm chart serviceMonitor selector label
    # Mostly it's your prometheus helm release name. Please find more information from here:
    # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/troubleshooting.md#troubleshooting-servicemonitor-changes
    release: prometheus
  timeout: 10s
  # -- Set of labels to transfer on the Kubernetes Service onto the target.
  targetLabels: []

  # -- Set of rules to relabel your exist metric labels
  metricRelabelings: []
    # - sourceLabels: [prometheus_replica]
    #   regex: (.*)
    #   targetLabel: another_prometheus_replica
    #   action: replace
    # - regex: prometheus_replica
    #   action: labeldrop

nodeSelector: {}
tolerations: []
affinity: {}

# -- Init Containers for Mlflow Pod
initContainers: []

# -- Extra containers for the mlflow pod
extraContainers: []

# -- Extra Volumes for the pod
extraVolumes: []
# - name: mlflow-volume
#   persistentVolumeClaim:
#     claimName: mlflow-pv-volume
# - name: example
#   configMap:
#     name: example

# -- Extra Volume Mounts for the mlflow container
extraVolumeMounts: []
# - name: mlflow-volume
#   mountPath: /mlflow/data
# - name: example
#   mountPath: /example

# -- Liveness probe configurations. Please look to [here](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes).
livenessProbe: {}
  # initialDelaySeconds: 0
  # periodSeconds: 10
  # timeoutSeconds: 1
  # failureThreshold: 3

# -- Readiness probe configurations. Please look to [here](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes).
readinessProbe: {}
  # initialDelaySeconds: 0
  # periodSeconds: 10
  # timeoutSeconds: 1
  # failureThreshold: 3

